"use strict";(self.webpackChunksunbird_obsrv=self.webpackChunksunbird_obsrv||[]).push([[990],{39609:(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var a=n(53536),i=n(83462),o=n(68903),s=n(97508),c=n(65043),l=n(48491),r=n(12805),d=n(34124),h=n(8387),u=n(73216),f=n(37538),C=n(3981),p=n(98612),m=n(41121),A=n(70579);const b=()=>{const e=(0,s.wA)(),[t,n]=(0,c.useState)({error:{selectChannel:!1,configureChannel:!1},manager:(0,m.Ct)("ALERT_MANAGER")}),[b,g]=(0,c.useState)(!1),[y,j]=(0,c.useState)(!1),x={formData:t,setFormData:n,dispatch:e},k=a.get(t,"type"),[v,S]=(0,c.useState)(!1),L=(0,u.Zp)(),N=(0,c.useMemo)((()=>[{id:"type",title:"Select Notification Channel",description:"In order to add a notification to an alert rule you first need to add and configure a notification channel (can be Slack, Email etc)",component:(0,A.jsx)(l.A,{...x,sectionLabel:"selectChannel"})},...k?[{id:"metadata",title:"Configure Notification Channel",description:`Configure the ${a.toUpper(k)} channel`,component:(0,A.jsx)(r.A,{...x,sectionLabel:"configureChannel"})}]:[]]),[k]);(0,c.useEffect)((()=>{S(!1)}),[t]);const T={sections:N,formData:t,actionHandler:async()=>{j(!0);try{(n=a.get(t,"error"))&&a.every(a.values(n),(e=>!0===e))&&(await(0,d.oP)({data:{...a.omit(t,["error"])}}),L("/alertChannels"),e((0,h.kX)({message:"Notification channel created successfully"})))}catch(i){e((0,h.z3)({message:"Failed to create channel"}))}finally{j(!1)}var n},actionLabel:"Add Notification Channel",notificationTestLabel:"Test Channel",notificationTestHandler:()=>{g(!0)},testChannel:v};return(0,A.jsxs)(A.Fragment,{children:[y&&(0,A.jsx)(p.A,{}),(0,A.jsx)(o.Ay,{children:(0,f.H1)(T)}),(0,A.jsx)(o.Ay,{children:(0,A.jsx)(i.A,{open:b,fullWidth:!0,children:(0,A.jsx)(C.A,{onClose:e=>g(!1),channel:t,setTestChannel:S})})})]})}}}]);
//# sourceMappingURL=990.5574bf4c.chunk.js.map