{"version":3,"file":"static/js/513.e08e5d90.chunk.js","mappings":"mPAKA,MAAMA,GAAcC,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAChCC,SAAU,WACVC,KAAM,QACNC,OAAQ,QACRC,MAAO,OACPC,UAAW,gBACX,QAAS,CACPC,MAAO,QACPC,OAAQ,QACRC,QAAS,UAsCb,EA1BsBC,IAAwE,IAAvE,QAAEC,EAAO,UAAEC,EAAS,YAAEC,EAAW,MAAER,EAAK,QAAES,GAAuBJ,EACtF,MAAMK,EAAcF,EACdG,EAAcH,GAAcI,EAAAA,EAAAA,KAACF,EAAW,CAACG,SAAS,UAAa,KAErE,OACED,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CACLC,UAAW,EAAGC,GAAI,CAAEC,WAAYjB,EAAOH,SAAU,WAAYG,MAAO,QAAUS,QAASA,EAAQS,UAC7FC,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAAF,SAAA,EACVN,EAAAA,EAAAA,KAACjB,EAAW,CAAAuB,SAAEP,KACdQ,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAU,SAASC,eAAe,SAASC,WAAW,SAASC,QAAS,EAAER,SAAA,EACxFN,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,GAAGV,UAChBN,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,SAAS/B,MAAM,UAASkB,SACpDX,OAGLK,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,GAAGV,UAChBN,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,SAAS/B,MAAM,UAASkB,SACvDZ,aAKJ,E,0BC1CX,MAuBA,EAvByB0B,KACrB,MAAMC,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,MAGjB,OACIxB,EAAAA,EAAAA,KAAAyB,EAAAA,SAAA,CAAAnB,UACIN,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,WAAS,EAACgB,WAAY,EAAGC,cAAe,EAAErB,SAC3CsB,EAAAA,EAAgBC,KAAI,CAACC,EAAQC,KAC1B,MAAM,KAAEC,EAAI,MAAE5C,EAAK,aAAE6C,EAAY,eAAEC,EAAc,YAAEC,GAAgBL,EACnE,OAAO9B,EAAAA,EAAAA,KAAAyB,EAAAA,SAAA,CAAAnB,UACHN,EAAAA,EAAAA,KAACoC,EAAAA,EAAO,CAACC,MAAOF,EAAY7B,UACxBN,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAAaM,MAAI,EAACuB,GAAI,GAAItB,GAAI,EAAGuB,GAAI,EAAGC,GAAI,EAAElC,UAC/CN,EAAAA,EAAAA,KAACyC,EAAW,CAAC5C,QAAU6C,GAVxBZ,IAAgCP,EAAS,oBAA0B,OAANO,QAAM,IAANA,OAAM,EAANA,EAAQa,MAUlCC,CAAkBd,GAASpC,QAASwC,EAAgBvC,UAAWsC,EAAcrC,YAAaoC,EAAM5C,MAAOyD,EAAAA,IAAMxB,EAAO,CAAC,UAAW,UAAWjC,OADtK2C,MAIhB,OAGZ,C","sources":["components/cards/statistics/BigNumber.tsx","pages/metrics/metrics.tsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\nimport { Card, CardContent, Grid, Typography } from '@mui/material';\n\nimport { GenericCardProps } from 'types/root';\n\nconst IconWrapper = styled('div')({\n  position: 'absolute',\n  left: '-17px',\n  bottom: '-27px',\n  color: '#fff',\n  transform: 'rotate(25deg)',\n  '& svg': {\n    width: '100px',\n    height: '100px',\n    opacity: '0.35'\n  }\n});\n\ninterface MetricsProps {\n  primary: string;\n  secondary: string;\n  iconPrimary: GenericCardProps['iconPrimary'];\n  color: string;\n  onClick: any\n}\n\nconst BigNumberCard = ({ primary, secondary, iconPrimary, color, onClick }: MetricsProps) => {\n  const IconPrimary = iconPrimary!;\n  const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\n\n  return (\n    <Card\n    elevation={0} sx={{ background: color, position: 'relative', color: '#fff' }} onClick={onClick}>\n      <CardContent>\n        <IconWrapper>{primaryIcon}</IconWrapper>\n        <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={1}>\n          <Grid item sm={12}>\n            <Typography variant=\"h3\" align=\"center\" color=\"inherit\">\n              {secondary}\n            </Typography>\n          </Grid>\n          <Grid item sm={12}>\n            <Typography variant=\"body1\" align=\"center\" color=\"inherit\">\n              {primary}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default BigNumberCard;\n","import * as _ from 'lodash';\nimport { Grid, Tooltip, useTheme } from '@mui/material';\nimport MetricsCard from 'components/cards/statistics/BigNumber';\nimport { metricsMetadata } from 'data/metrics'\nimport { useNavigate } from 'react-router';\n\nconst MetricsDashboard = () => {\n    const theme = useTheme();\n    const navigate = useNavigate();\n    const navigateToMetrics = (metric: Record<string, any>) => navigate(`/metrics/details/${metric?.id}`);\n\n    return (\n        <>\n            <Grid container rowSpacing={2} columnSpacing={2}>\n                {metricsMetadata.map((metric, index) => {\n                    const { icon, color, primaryLabel, secondaryLabel, description } = metric;\n                    return <>\n                        <Tooltip title={description}>\n                            <Grid key={index} item xs={12} sm={6} md={4} lg={4}>\n                                <MetricsCard onClick={(e: any) => navigateToMetrics(metric)} primary={secondaryLabel} secondary={primaryLabel} iconPrimary={icon} color={_.get(theme, ['palette', 'primary', color])} />\n                            </Grid>\n                        </Tooltip>\n                    </>\n                })}\n            </Grid>\n        </>\n    )\n};\n\nexport default MetricsDashboard;\n"],"names":["IconWrapper","styled","position","left","bottom","color","transform","width","height","opacity","_ref","primary","secondary","iconPrimary","onClick","IconPrimary","primaryIcon","_jsx","fontSize","Card","elevation","sx","background","children","_jsxs","CardContent","Grid","container","direction","justifyContent","alignItems","spacing","item","sm","Typography","variant","align","MetricsDashboard","theme","useTheme","navigate","useNavigate","_Fragment","rowSpacing","columnSpacing","metricsMetadata","map","metric","index","icon","primaryLabel","secondaryLabel","description","Tooltip","title","xs","md","lg","MetricsCard","e","id","navigateToMetrics","_"],"sourceRoot":""}