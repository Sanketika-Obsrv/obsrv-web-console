{"version":3,"file":"static/js/59.9b00c360.chunk.js","mappings":"+OAIA,MAAMA,EAAiB,CACrB,CAAEC,GAAI,SAAUC,MAAO,gBAAiBC,KAAM,UAC9C,CAAEF,GAAI,SAAUC,MAAO,gBAAiBC,KAAM,WAyDhD,EAtDmBC,KACjB,MAAMC,GAAQC,EAAAA,EAAAA,KACRC,EAAcC,OAAOC,SAASC,SAC9BC,GAAWC,EAAAA,EAAAA,MACXC,EAAgBC,IAAAA,UAAYd,GAAgBe,GAAQD,IAAAA,SAAWP,EAAaQ,EAAKZ,QAEjFa,EAAeA,CAACC,EAAYC,KAChC,MAAMC,EAAenB,EAAekB,GAAUf,KAC9CQ,EAAS,eAAeQ,IAAe,EA2CzC,OAAOC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAbHF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEH,UACzBF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACR,MAAI,EAACW,GAAI,GAAIzB,GAAG,kBAAiBqB,UACrCK,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,MAAO,QAASR,SAAA,EA3B/BF,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAACC,GAAI,CAAEE,aAAc,EAAGC,YAAa,WAAYV,UACnDF,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CACHC,QAAQ,WACRC,MAAOtB,EACPuB,SAAUpB,EACVqB,kBAAmB,CAACC,QAAQ,GAC5BT,GAAI,CAAE,WAAc,WAAYP,SAE/BR,IAAAA,IAAMd,GAAgB,CAACuC,EAAQC,KAC9B,MAAM,MAAEtC,EAAK,GAAED,EAAE,KAAEE,GAASoC,EAC5B,OAAOnB,EAAAA,EAAAA,KAACqB,EAAAA,EAAG,CAAUvC,MAAOA,EAAO2B,GAAI,CACrCa,OAAQ,QACR,iBAAkB,CAChBC,gBAAiBtC,EAAMuC,QAAQC,QAAQC,KACvCC,MAAO,WAJM9C,EAMZ,SAaLmB,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACyB,UAAW,EAAE1B,UACjBF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAM,cAQa,C","sources":["pages/alertManager/views/AlertRules.tsx"],"sourcesContent":["import { Box, Grid, Tab, Tabs, useTheme } from \"@mui/material\";\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport _ from \"lodash\";\n\nconst alertTypeField = [\n  { id: \"custom\", label: \"Custom Alerts\", path: \"custom\" },\n  { id: \"system\", label: \"System Alerts\", path: \"system\" }\n];\n\nconst AlertRules = () => {\n  const theme = useTheme();\n  const currentPath = window.location.pathname;\n  const navigate = useNavigate();\n  const selectedIndex = _.findIndex(alertTypeField, item => _.endsWith(currentPath, item.path));\n\n  const handleChange = (event: any, newValue: any) => {\n    const selectedPath = alertTypeField[newValue].path;\n    navigate(`/alertRules/${selectedPath}`);\n  };\n\n  const renderTabs = () => {\n    return (\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs\n          variant='standard'\n          value={selectedIndex}\n          onChange={handleChange}\n          TabIndicatorProps={{hidden: true}}\n          sx={{ 'background': '#FFFFFF' }}\n        >\n          {_.map(alertTypeField, (fields, index) => {\n            const { label, id, path } = fields;\n            return <Tab key={id} label={label} sx={{\n              border: 'unset',\n              \"&.Mui-selected\": {\n                backgroundColor: theme.palette.primary.main,\n                color: \"white\"\n              }\n            }} />\n          })}\n        </Tabs>\n      </Box>\n    )\n  }\n\n  const renderAlertRules = () => {\n    return (\n      <Grid container spacing={3}>\n        <Grid item xs={12} id=\"tabSectionStart\">\n          <Box sx={{ width: '100%' }}>\n            {renderTabs()}\n            <Grid marginTop={1}>\n              <Outlet />\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  return <>{renderAlertRules()}</>\n};\n\nexport default AlertRules;\n"],"names":["alertTypeField","id","label","path","AlertRules","theme","useTheme","currentPath","window","location","pathname","navigate","useNavigate","selectedIndex","_","item","handleChange","event","newValue","selectedPath","_jsx","_Fragment","children","Grid","container","spacing","xs","_jsxs","Box","sx","width","borderBottom","borderColor","Tabs","variant","value","onChange","TabIndicatorProps","hidden","fields","index","Tab","border","backgroundColor","palette","primary","main","color","marginTop","Outlet"],"sourceRoot":""}