{"version":3,"file":"static/js/545.208bce2a.chunk.js","mappings":"+HAAA,SACEA,KAAM,CACJA,KAAM,QAERC,MAAO,QACPC,QAAS,CACPC,MAAO,gBACPC,aAAc,gBACdC,IAAK,cACLC,UAAW,oBACXC,WAAY,qBACZC,QAAS,mBAEXC,QAAS,CACPC,KAAM,eACNC,OAAQ,iBACRC,KAAM,eACNC,MAAO,CACLC,OAAQ,cACRC,MAAO,QACPC,MAAO,SACPT,WAAY,aACZU,SAAU,WACVC,OAAQ,WAGZC,cAAe,CACbR,OAAQ,uBACRC,KAAM,qBACNC,MAAO,CACLC,OAAQ,cACRC,MAAO,QACPC,MAAO,SACPE,OAAQ,WAGZE,eAAgB,CACdV,KAAM,uB,wECjCV,MAWA,EAXsBW,IAAoF,IAAnF,KAAEC,EAAO,GAAE,QAAEC,EAAU,WAAU,OAAEC,EAAM,OAAEC,EAAS,CAAC,GAAwBJ,EAChG,MAAMK,GAAWC,EAAAA,EAAAA,OACX,SAAEC,GAAaF,EACfG,EAAQ,CAAEP,OAAMC,UAASC,OAAQA,GAAUI,EAAUE,IAAKF,IAEhEG,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,IAAwB,CAAEH,QAAOJ,UAAS,GAC3C,CAACD,GAAQ,C,mFCThB,MAAMS,GAAMC,E,SAAAA,IAAe,QAAU,QAErC,GACI,CACI,SAAY,cACZ,IAAO,YACP,MAASD,EACT,KAAQ,SACR,YAAe,uBAEnB,CACI,SAAY,QACZ,IAAO,yBACP,MAAS,IACT,KAAQ,SACR,YAAe,6DAEnB,CACI,SAAY,QACZ,IAAO,yBACP,MAAS,IACT,KAAQ,SACR,YAAe,6DAEnB,CACI,SAAY,QACZ,IAAO,2BACP,MAAS,IACT,KAAQ,SACR,YAAe,gEAEnB,CACI,SAAY,QACZ,IAAO,wBACP,MAAS,IACT,KAAQ,cACR,YAAe,gEAGnB,CACI,SAAY,QACZ,IAAO,mBACP,MAAS,IACT,KAAQ,SACR,YAAe,0DAGnB,CACI,SAAY,WACZ,IAAO,0BACP,MAAS,GAAGA,sBAEZ,KAAQ,UAEZ,CACI,SAAY,WACZ,IAAO,oBACP,MAAS,GAAGA,WAEZ,KAAQ,UAEZ,CACI,SAAY,aACZ,IAAO,qBACP,MAAS,MACT,KAAQ,UAEZ,CACI,SAAY,aACZ,IAAO,mBACP,MAAS,OACT,KAAQ,UAEZ,CACI,SAAY,aACZ,IAAO,mBACP,MAAS,OACT,KAAQ,UAEZ,CACI,SAAY,aACZ,IAAO,mBACP,MAAS,OACT,KAAQ,UAEZ,CACI,SAAY,aACZ,IAAO,YACP,MAAS,IACT,KAAQ,UAEZ,CACI,SAAY,aACZ,IAAO,oBACP,MAAS,SACT,KAAQ,UAEZ,CACI,SAAY,aACZ,IAAO,sBACP,MAAS,SACT,KAAQ,UAEZ,CACI,SAAY,aACZ,IAAO,gCACP,MAAS,SACT,KAAQ,UAEZ,CACI,SAAY,UACZ,IAAO,mBACP,MAAS,MACT,KAAQ,UAEZ,CACI,SAAY,UACZ,IAAO,YACP,MAAS,OACT,KAAQ,UAEZ,CACI,SAAY,UACZ,IAAO,YACP,MAAS,0BACT,KAAQ,UAEZ,CACI,SAAY,UACZ,IAAO,iCACP,MAAS,OACT,KAAQ,UAEZ,CACI,SAAY,UACZ,IAAO,4BACP,MAAS,OACT,KAAQ,UAEZ,CACI,SAAY,UACZ,IAAO,+BACP,MAAS,QACT,KAAQ,UAEZ,CACI,SAAY,UACZ,IAAO,iBACP,MAAS,SACT,KAAQ,UAEZ,CACI,SAAY,UACZ,IAAO,yBACP,MAAS,QACT,KAAQ,UAEZ,CACI,SAAY,UACZ,IAAO,+BACP,MAAS,SACT,KAAQ,UAEZ,CACI,SAAY,cACZ,IAAO,wBACP,MAAS,IACT,KAAQ,UAEZ,CACI,SAAY,cACZ,IAAO,qBACP,MAAS,KACT,KAAQ,UAEZ,CACI,SAAY,cACZ,IAAO,sBACP,MAAS,IACT,KAAQ,UAEZ,CACI,SAAY,SACZ,IAAO,+BACP,MAAS,QACT,KAAQ,UAEZ,CACI,SAAY,SACZ,IAAO,8BACP,MAAS,QACT,KAAQ,UAEZ,CACI,SAAY,SACZ,IAAO,+BACP,MAAS,SACT,KAAQ,UAEZ,CACI,SAAY,SACZ,IAAO,8BACP,MAAS,QACT,KAAQ,UAEZ,CACI,SAAY,QACZ,IAAO,iBACP,MAAS,SACT,KAAQ,UAEZ,CACI,SAAY,QACZ,IAAO,0BACP,MAAS,QACT,KAAQ,UAEZ,CACI,SAAY,QACZ,IAAO,gBACP,MAAS,SACT,KAAQ,UAEZ,CACI,SAAY,QACZ,IAAO,kBACP,MAAS,SACT,KAAQ,UAEZ,CACI,SAAY,QACZ,IAAO,qBACP,MAAS,SACT,KAAQ,W,kHCvOhB,MAmCA,EAnCuBE,IACrB,MAAM,SAAEC,EAAW,IAAOD,EAe1B,OAAOE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACLF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEH,UACzBF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGL,UAChBF,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACC,SAAS,EAAMP,UACvBF,EAAAA,EAAAA,KAACU,EAAAA,EAAW,CAAAR,UACVF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGM,WAAW,SAAQT,UAC7CF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGL,UAChBF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGM,WAAW,SAAQT,SAC5CU,IAAAA,IAAMb,GArBAc,IACrB,MAAM,IAAEC,EAAG,MAAEC,EAAK,YAAEC,EAAc,IAAOH,EACzC,OAAOI,EAAAA,EAAAA,MAAAhB,EAAAA,SAAA,CAAAC,SAAA,EACLF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIW,GAAI,EAAGC,GAAI,EAAGC,GAAI,CAAEC,GAAI,CAAEd,GAAI,EAAGW,GAAI,iBAAmBhB,UACzEe,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACF,GAAI,CAAEG,UAAW,CAAEhB,GAAI,OAAQW,GAAI,UAAYhB,SAAA,CAAEY,EAAI,WAEnEG,EAAAA,EAAAA,MAACd,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIW,GAAI,EAAGC,GAAI,EAAEjB,SAAA,EAC9BF,EAAAA,EAAAA,KAACwB,EAAAA,EAAS,CAACT,MAAOA,EAAOU,WAAS,EAACC,YAAY,6BAC/C1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAc,CAAAzB,SAAEc,SAElB,mBAmBF,E,qCCxBL,MA2CA,EAhCuBY,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,ECHsChC,IACrCa,IAAAA,OAASb,GAAU,CAACA,EAA+Bc,KACtD,MAAM,SAAEmB,GAAanB,EACfoB,EAAmBrB,IAAAA,IAAMb,EAAUiC,IAAa,GAEtD,OADAjC,EAASiC,GAAY,IAAIC,EAAkBpB,GACpCd,CAAQ,GAChB,CAAC,GDH6BmC,EADhBC,EAAAA,EAAAA,KAAaC,GAAexB,EAAAA,IAAMwB,EAAO,qBAEpDC,EAfiBA,IAChBzB,EAAAA,QAAUyB,GAAUC,KAAKC,IAC5B,MAAOC,EAAOzC,GAAYwC,EAC1B,MAAO,CACHE,GAAID,EACJA,MAAOA,EACPE,WAAW1C,EAAAA,EAAAA,KAAC2C,EAAa,CAAC5C,SAAUA,IACvC,IAQY6C,CAAkBb,IACnCc,EAAAA,EAAAA,GAAc,CAAE5D,KAAM,SAAUE,OAAQyB,EAAAA,IAAMkC,EAAAA,EAAS,CAAC,iBAAkB,WAE1E,MAAMC,EAAcC,UAChB,MAAMjD,OC5BgBiD,WAAuC,IAAhC,KAAEC,EAAO,CAAC,EAAC,OAAEC,GAAalE,EAC3D,IACI,OAAOD,CACX,CAAE,MAAOoE,GACL,MAAO,EACX,GDuB2BC,CAAe,CAAC,GACvCvB,GAASwB,EAAAA,EAAAA,IAAkBtD,GAAU,EAOzC,OAJAL,EAAAA,EAAAA,YAAU,KACNqD,GAAa,GACd,KAGC/C,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIe,EAAAA,EAAAA,MAACd,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEH,SAAA,EACvBF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGL,UACdF,EAAAA,EAAAA,KAACsD,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,UAAUC,GAAI,EAAEvD,SAAC,6BAIpDF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGL,UACdF,EAAAA,EAAAA,KAAC0D,EAAAA,EAAgB,CAACrB,SAAUA,UAGrC,C","sources":["data/telemetry/pageIds.ts","hooks/useImpression.ts","data/systemSettings.ts","pages/systemSettings/components/SystemSetting.tsx","pages/systemSettings/index.tsx","services/systemSettings.ts"],"sourcesContent":["export default {\n  home: {\n    home: 'home'\n  },\n  login: 'login',\n  metrics: {\n    infra: 'metrics:infra',\n    overallInfra: 'metrics:infra',\n    api: 'metrics:api',\n    ingestion: 'metrics:ingestion',\n    processing: 'metrics:processing',\n    storage: 'metrics:storage'\n  },\n  dataset: {\n    list: \"dataset:list\",\n    create: 'dataset:create',\n    edit: 'dataset:edit',\n    pages: {\n      schema: \"json-schema\",\n      input: \"input\",\n      field: \"fields\",\n      processing: \"processing\",\n      advanced: \"advanced\",\n      review: \"review\"\n    }\n  },\n  masterdataset: {\n    create: 'masterDataset:create',\n    edit: 'masterDataset:edit',\n    pages: {\n      schema: \"json-schema\",\n      input: \"input\",\n      field: \"fields\",\n      review: \"review\"\n    }\n  },\n  systemSettings: {\n    list: \"systemSettings:list\"\n  }\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { generateImpressionEvent } from 'services/telemetry';\n\nconst useImpression = ({ type = \"\", subtype = \"PAGINATE\", pageid, object = {} }: Record<string, any>) => {\n    const location = useLocation();\n    const { pathname } = location;\n    const edata = { type, subtype, pageid: pageid || pathname, uri: pathname };\n\n    useEffect(() => {\n        generateImpressionEvent({ edata, object });\n    }, [pageid])\n\n};\n\nexport default useImpression;","import { getConfigValue } from \"services/configData\"\n\nconst env = getConfigValue(\"ENV\") || \"local\"\n\nexport default [\n    {\n        \"category\": \"ENVIRONMENT\",\n        \"key\": \"systemEnv\",\n        \"value\": env,\n        \"type\": \"SYSTEM\",\n        \"description\": \"Current environment\"\n    },\n    {\n        \"category\": \"KAFKA\",\n        \"key\": \"defaultTopicPartitions\",\n        \"value\": \"4\",\n        \"type\": \"SYSTEM\",\n        \"description\": \"This setting is used to configure default topic partition\"\n    },\n    {\n        \"category\": \"KAFKA\",\n        \"key\": \"defaultTopicRetentions\",\n        \"value\": \"5\",\n        \"type\": \"SYSTEM\",\n        \"description\": \"This setting is used to configure default topic retention\"\n    },\n    {\n        \"category\": \"KAFKA\",\n        \"key\": \"defaultReplicationFactor\",\n        \"value\": \"2\",\n        \"type\": \"SYSTEM\",\n        \"description\": \"This setting is used to configure default replication factor\"\n    },\n    {\n        \"category\": \"KAFKA\",\n        \"key\": \"maxBatchEventSizeInMb\",\n        \"value\": \"2\",\n        \"type\": \"UserDefined\",\n        \"description\": \"This setting is used to configure max batch event size in Mb\"\n\n    },\n    {\n        \"category\": \"KAFKA\",\n        \"key\": \"maxEventSizeInMb\",\n        \"value\": \"1\",\n        \"type\": \"SYSTEM\",\n        \"description\": \"This setting is used to configure max event size in Mb\"\n\n    },\n    {\n        \"category\": \"DATA_API\",\n        \"key\": \"entryTopicMasterDataset\",\n        \"value\": `${env\n            }.masterdata.ingest`,\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATA_API\",\n        \"key\": \"entryTopicDataset\",\n        \"value\": `${env\n            }.ingest`,\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASOURCE\",\n        \"key\": \"segmentGranularity\",\n        \"value\": \"DAY\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASOURCE\",\n        \"key\": \"queryGranularity\",\n        \"value\": \"None\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASOURCE\",\n        \"key\": \"maxRowPerSegment\",\n        \"value\": \"500k\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASOURCE\",\n        \"key\": \"maxBytesInMemory\",\n        \"value\": \"200M\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASOURCE\",\n        \"key\": \"taskCount\",\n        \"value\": \"1\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASOURCE\",\n        \"key\": \"defaultTimeColumn\",\n        \"value\": \"syncts\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASOURCE\",\n        \"key\": \"defaultTaskDuration\",\n        \"value\": \"1 hour\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASOURCE\",\n        \"key\": \"defaultTaskPublishingDuration\",\n        \"value\": \"1 hour\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASET\",\n        \"key\": \"defaultDatasetId\",\n        \"value\": \"ALL\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASET\",\n        \"key\": \"redisPort\",\n        \"value\": \"6379\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASET\",\n        \"key\": \"redisHost\",\n        \"value\": \"redis.svc.cluster.local\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASET\",\n        \"key\": \"individualEventsDropDuplicates\",\n        \"value\": \"true\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASET\",\n        \"key\": \"batchEventsDropDuplicates\",\n        \"value\": \"true\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASET\",\n        \"key\": \"extractionConfigIsBatchEvent\",\n        \"value\": \"false\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASET\",\n        \"key\": \"validationMode\",\n        \"value\": \"strict\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASET\",\n        \"key\": \"validateConfigValidate\",\n        \"value\": \"false\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"DATASET\",\n        \"key\": \"defaultDedupePeriodInSeconds\",\n        \"value\": \"604800\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"WEB-CONSOLE\",\n        \"key\": \"maxFileUploadSizeInMb\",\n        \"value\": \"5\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"WEB-CONSOLE\",\n        \"key\": \"telemetryBatchSize\",\n        \"value\": \"10\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"WEB-CONSOLE\",\n        \"key\": \"apiTimeoutInMinutes\",\n        \"value\": \"1\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"BACKUP\",\n        \"key\": \"metadataStoreBackupFrequency\",\n        \"value\": \"DAILY\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"BACKUP\",\n        \"key\": \"metricsStoreBackupFrequency\",\n        \"value\": \"DAILY\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"BACKUP\",\n        \"key\": \"defaultDedupePeriodInSeconds\",\n        \"value\": \"604800\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"BACKUP\",\n        \"key\": \"metricsStoreBackupFrequency\",\n        \"value\": \"DAILY\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"INFRA\",\n        \"key\": \"maxElapsedTime\",\n        \"value\": \"604800\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"INFRA\",\n        \"key\": \"configureForSpeedOrCost\",\n        \"value\": \"DAILY\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"INFRA\",\n        \"key\": \"encryptionKey\",\n        \"value\": \"604800\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"INFRA\",\n        \"key\": \"backupFrequency\",\n        \"value\": \"604800\",\n        \"type\": \"SYSTEM\"\n    },\n    {\n        \"category\": \"INFRA\",\n        \"key\": \"scaleConfiguration\",\n        \"value\": \"604800\",\n        \"type\": \"SYSTEM\"\n    }\n]","import _ from 'lodash';\nimport { CardContent, Grid, InputLabel, TextField, FormHelperText } from '@mui/material';\nimport MainCard from 'components/MainCard';\n\nconst SystemSetting = (props: any) => {\n  const { settings = [] } = props;\n\n  const renderSetting = (setting: Record<string, any>) => {\n    const { key, value, description = '' } = setting;\n    return <>\n      <Grid item xs={12} sm={3} lg={4} sx={{ pt: { xs: 2, sm: '0 !important' } }}>\n        <InputLabel sx={{ textAlign: { xs: 'left', sm: 'right' } }}>{key} :</InputLabel>\n      </Grid>\n      <Grid item xs={12} sm={9} lg={6}>\n        <TextField value={value} fullWidth placeholder=\"Enter the Setting Value\" />\n        <FormHelperText>{description}</FormHelperText>\n      </Grid>\n    </>\n  }\n\n  return <>\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <MainCard content={false} >\n          <CardContent>\n            <Grid container spacing={3} alignItems=\"center\">\n              <Grid item xs={12}>\n                <Grid container spacing={2} alignItems=\"center\">\n                  {_.map(settings, renderSetting)}\n                </Grid>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </MainCard>\n      </Grid>\n    </Grid>\n  </>\n}\n\nexport default SystemSetting","import * as _ from 'lodash';\nimport { Grid } from '@mui/material';\nimport { getAllSettings, transformSystemSettingsResponse } from 'services/systemSettings';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addSystemSettings } from 'store/reducers/systemSettings';\nimport AccordionSection from 'components/AccordionSection';\nimport SystemSetting from './components/SystemSetting';\nimport { Typography } from '@mui/material';\nimport useImpression from 'hooks/useImpression';\nimport pageIds from 'data/telemetry/pageIds';\n\nconst getSectionsConfig = (sections: Record<string, any>) => {\n    return _.entries(sections).map((section: any) => {\n        const [title, settings] = section;\n        return {\n            id: title,\n            title: title,\n            component: <SystemSetting settings={settings}></ SystemSetting>\n        }\n    })\n}\n\nconst SystemSettings = () => {\n    const dispatch = useDispatch();\n    const settings = useSelector((state: any) => _.get(state, 'systemSettings'));\n    const formattedSettingsPayload = transformSystemSettingsResponse(settings);\n    const sections = getSectionsConfig(formattedSettingsPayload);\n    useImpression({ type: \"detail\", pageid: _.get(pageIds, ['systemSettings', 'list']) });\n\n    const allSettings = async () => {\n        const settings = await getAllSettings({});\n        dispatch(addSystemSettings(settings));\n    }\n\n    useEffect(() => {\n        allSettings();\n    }, []);\n\n    return (\n        <>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\" color=\"primary\" mr={1}>\n                        System Configurations\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <AccordionSection sections={sections}></AccordionSection>\n                </Grid>\n            </Grid>\n        </>\n    )\n};\n\nexport default SystemSettings;\n","import systemSettings from \"data/systemSettings\";\nimport _ from \"lodash\";\n\nexport const getAllSettings = async ({ data = {}, config }: any) => {\n    try {\n        return systemSettings;\n    } catch (error) {\n        return [];\n    }\n}\n\nexport const updateSetting = () => {\n\n}\n\nexport const deleteSetting = () => {\n\n}\n\nexport const readSetting = () => {\n\n}\n\nexport const transformSystemSettingsResponse = (settings: Array<Record<string, any>>) => {\n    return _.reduce(settings, (settings: Record<string, any>, setting: Record<string, any>) => {\n        const { category } = setting;\n        const existingSettings = _.get(settings, category) || [];\n        settings[category] = [...existingSettings, setting];\n        return settings;\n    }, {});\n}\n\n\n"],"names":["home","login","metrics","infra","overallInfra","api","ingestion","processing","storage","dataset","list","create","edit","pages","schema","input","field","advanced","review","masterdataset","systemSettings","_ref","type","subtype","pageid","object","location","useLocation","pathname","edata","uri","useEffect","generateImpressionEvent","env","getConfigValue","props","settings","_jsx","_Fragment","children","Grid","container","spacing","item","xs","MainCard","content","CardContent","alignItems","_","setting","key","value","description","_jsxs","sm","lg","sx","pt","InputLabel","textAlign","TextField","fullWidth","placeholder","FormHelperText","SystemSettings","dispatch","useDispatch","formattedSettingsPayload","category","existingSettings","transformSystemSettingsResponse","useSelector","state","sections","map","section","title","id","component","SystemSetting","getSectionsConfig","useImpression","pageIds","allSettings","async","data","config","error","getAllSettings","addSystemSettings","Typography","variant","color","mr","AccordionSection"],"sourceRoot":""}