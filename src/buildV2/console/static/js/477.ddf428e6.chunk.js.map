{"version":3,"file":"static/js/477.ddf428e6.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/ArrowLeftOutlined.js","../node_modules/@ant-design/icons/es/icons/ArrowLeftOutlined.js","pages/rollup/components/ListRollups.tsx","pages/datasetManagement/components/DatasetManagement.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar ArrowLeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"arrow-left\", \"theme\": \"outlined\" };\nexport default ArrowLeftOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ArrowLeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/ArrowLeftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar ArrowLeftOutlined = function ArrowLeftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ArrowLeftOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(ArrowLeftOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'ArrowLeftOutlined';\n}\nexport default RefIcon;","import { DeleteOutlined, EditOutlined, PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { Alert, Button, Dialog, DialogTitle, Grid, Stack, Typography } from \"@mui/material\";\nimport { useNavigate, useParams } from \"react-router\";\nimport _ from 'lodash';\nimport MainCard from \"components/MainCard\";\nimport ScrollX from \"components/ScrollX\";\nimport BasicReactTable from \"components/BasicReactTable\";\nimport { IconButton, useTheme } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { fetchDatasources } from \"services/dataset\";\nimport { useDispatch } from \"react-redux\";\nimport { error, success } from 'services/toaster';\nimport { deleteDraftRollupDatasources } from \"services/datasource\";\nimport { Box } from \"@mui/system\";\nimport AlertDialog from \"components/AlertDialog\";\nimport Loader from \"components/Loader\";\nimport BackdropLoader from \"components/BackdropLoader\";\nimport { granularityOptions } from \"../utils/commonUtils\";\nimport { DatasetStatus } from \"types/datasets\";\nimport en from 'utils/locales/en.json';\nimport AnimateButton from \"components/@extended/AnimateButton\";\nimport { StandardWidthButton } from \"components/styled/Buttons\";\n\nconst ListRollups = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const params = useParams();\n    const theme = useTheme();\n    const { datasetId } = params;\n    const [draftDatasets, setDraftDatasets] = useState([]);\n    const [open, setOpen] = useState<boolean>(false);\n    const [loading, setLoading] = useState(false);\n    const [datasourceIdForDelete, setDatasourceIdForDelete] = useState('');\n\n    const getRollupDatasourceList = async () => {\n        try {\n            setLoading(true)\n            const response = await fetchDatasources({ data: { filters: { status: [DatasetStatus.Draft, DatasetStatus.ReadyToPublish, DatasetStatus.Live], dataset_id: `${datasetId}` } } })\n            setDraftDatasets(response)\n        }\n        catch (err) {\n            dispatch(error({ \"message\": en.faildToFetch }));\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        getRollupDatasourceList()\n    }, [])\n\n    const rollupGranularityOption = _.map(draftDatasets, (obj: any) => {\n        if (_.get(obj, 'ingestion_spec.spec.dataSchema.granularitySpec.rollup') === true) {\n            const granularity = obj?.metadata?.granularity;\n            return granularity;\n        }\n    });\n\n    const getAggregationLevel = (dataset: any) => {\n        const aggregationLevelLable = dataset?.metadata?.granularity\n        return aggregationLevelLable;\n    }\n\n    const rollups: Record<string, any>[] =\n        _.filter(draftDatasets, (dataset: any) => {\n            if (_.get(dataset, 'ingestion_spec.spec.dataSchema.granularitySpec.rollup') === true) {\n                return dataset\n            }\n        })\n\n    const rollupTableData = _.map(rollups, (dataset: any) => {\n        return { name: dataset?.dataset_id, datasourceId: dataset?.datasource, id: dataset?.id, aggregation: getAggregationLevel(dataset), aggregationLable: _.capitalize(getAggregationLevel(dataset).replaceAll(\"_\", \" \")) }\n    })\n\n    const addNewRollup = () => {\n        navigate(`/datasets/configurerollups/${datasetId}`, { state: { rollupGranularityOption: rollupGranularityOption, edit: false } })\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleAction = async () => {\n        try {\n            await deleteDraftRollupDatasources(datasourceIdForDelete, DatasetStatus.Draft)\n            dispatch(success({ \"message\": en.datasourceDeleted }));\n            getRollupDatasourceList();\n            setOpen(false);\n        }\n        catch (err) {\n            dispatch(error({ \"message\": en.faildToDeleteDatasource }));\n        }\n    };\n\n    const renderActions = (value: any) => {\n        const rollupDatasourceId = value.row.original.id;\n        const datasourceId = value.row.original.datasourceId;\n\n        return <Box sx={{ marginLeft: -1.5 }}>\n            <IconButton color=\"primary\" size=\"large\"\n                onClick={() => {\n                    navigate(`/datasets/configurerollups/${datasetId}`,\n                        { state: { rollupGranularityOption: rollupGranularityOption, edit: true, rollupDatasourceName: value.row.original.datasourceId, aggregationLevel: value.row.original.aggregation } })\n                }}\n            >\n                <EditOutlined style={{ color: theme.palette.primary.main }} />\n            </IconButton>\n            <IconButton color=\"primary\" size=\"large\"\n                onClick={() => {\n                    setOpen(true)\n                    setDatasourceIdForDelete(rollupDatasourceId)\n                }}\n            >\n                <DeleteOutlined style={{ color: theme.palette.error.main }} />\n            </IconButton>\n        </Box>\n    }\n\n    const columns = [\n        {\n            Header: \"Datasource name\",\n            accessor: 'name'\n        },\n        {\n            Header: \"Aggregation level\",\n            accessor: \"aggregationLable\"\n        },\n        {\n            Header: \"Actions\",\n            accessor: 'actions',\n            Cell: renderActions\n        }\n    ];\n\n    const dialogContext = { title: 'Delete rollup datasource', content: 'Are you sure you want to delete this rollup datasource ?' };\n\n    const renderRollups = () => {\n        if (!_.get(rollups, 'length')) return null;\n        return <Grid item xs={12}>\n            <MainCard content={false} headerSX={{}}>\n                <ScrollX>\n                    <BasicReactTable header={true} columns={columns} data={rollupTableData} striped={true} />\n                </ScrollX>\n            </MainCard >\n        </Grid>\n    }\n\n    return <>\n        {loading && <Loader />}\n        <BackdropLoader open={loading} />\n        <Grid container>\n            {_.isEmpty(rollupTableData) ? <>\n                <Alert sx={{ display: \"flex\", alignItems: \"center\" }} severity=\"error\">{en.clickToCreateRollup}</Alert>\n            </> : renderRollups()}\n            <Grid item xs={12}>\n                {rollups.length === granularityOptions.length ? <></> : <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" mt={1}>\n                    <Button size=\"medium\" startIcon={<ArrowLeftOutlined />} sx={{ fontWeight: 500 }} onClick={() => navigate(`/datasets?status=${DatasetStatus.ReadyToPublish}`)}>\n                        Previous\n                    </Button>\n                    <Button size=\"medium\" startIcon={<PlusOutlined />} sx={{ fontWeight: 500 }} onClick={addNewRollup}>\n                        Add Rollup\n                    </Button>\n                </Stack>}\n                <AlertDialog open={open} handleClose={handleClose} action={handleAction} context={dialogContext} />\n            </Grid>\n        </Grid>\n    </>\n}\n\n\nexport default ListRollups;\n","import AccordionSection from \"components/AccordionSection\";\nimport _ from \"lodash\";\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { error } from \"services/toaster\";\nimport { getDatasetState } from \"services/dataset\";\nimport { useEffect, useState } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport Skeleton from \"components/Skeleton\";\nimport MainCard from \"components/MainCard\";\nimport ListRollups from \"pages/rollup/components/ListRollups\";\nimport { DatasetStatus } from \"types/datasets\";\nimport { fetchDatasetsThunk } from \"store/middlewares\";\nimport Loader from \"components/Loader\";\nimport ReviewAllCongurations from \"pages/dataset/wizard/components/ReviewAllConfigurations\";\n\nconst DatasetManagement = () => {\n    const { datasetId } = useParams();\n    const [params] = useSearchParams();\n    const dispatch = useDispatch();\n    const masterDataset: string = params.get(\"master\") || \"false\";\n    const datasetStatus: string = params.get(\"status\") || DatasetStatus.Draft\n    const [dataset, setDataset] = useState({});\n    const [loading, setLoading] = useState<boolean>(true)\n    const datasetName = _.get(dataset, [\"pages\", \"datasetConfiguration\", \"state\", \"config\", \"name\"]) || datasetId\n    const datasets: any = useSelector((state: any) => _.get(state, 'dataset.data.data') || []);\n\n    useEffect(() => {\n        _.isEmpty(datasets) && dispatch(fetchDatasetsThunk({ data: { filters: { status: [DatasetStatus.Live, DatasetStatus.Retired] } } }));\n    }, [])\n\n    const fetchDatasetDetails = async () => {\n        setLoading(true)\n        try {\n            const datasetState: Record<string, any> = await getDatasetState(datasetId!, datasetStatus);\n            setDataset(datasetState);\n        } catch (err) {\n            dispatch(error({ message: 'Dataset does not exists' }));\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        fetchDatasetDetails();\n    }, [])\n\n    const liveSections = [\n        {\n            title: <Typography variant=\"body1\" fontWeight={500}>Review - {_.capitalize(datasetName)}</Typography>,\n            id: datasetName,\n            componentType: 'box',\n            component: <ReviewAllCongurations datasetState={dataset} master={masterDataset == \"true\" ? true : false}/>\n        }\n    ]\n\n    const draftSections = [\n        {\n            id: 'rollups',\n            title: 'Rollup Datasources',\n            component: <ListRollups />,\n            componentType: 'box'\n        }\n    ]\n\n    const datasetSection = () => {\n        const statusToSectionMapping = {\n            [DatasetStatus.Live]: liveSections,\n            [DatasetStatus.Draft]: draftSections,\n            [DatasetStatus.Publish]: draftSections,\n            [DatasetStatus.ReadyToPublish]: draftSections\n        }\n        return _.get(statusToSectionMapping, datasetStatus) || []\n    }\n\n    return <>\n        {loading ? <MainCard content={false}><Skeleton type=\"table\"></Skeleton><Loader /></MainCard>\n            : <AccordionSection sections={datasetSection()} />}\n    </>\n}\n\nexport default DatasetManagement;\n"],"names":["ArrowLeftOutlined","props","ref","React","AntdIcon","_objectSpread","icon","ArrowLeftOutlinedSvg","ListRollups","dispatch","useDispatch","navigate","useNavigate","params","useParams","theme","useTheme","datasetId","draftDatasets","setDraftDatasets","useState","open","setOpen","loading","setLoading","datasourceIdForDelete","setDatasourceIdForDelete","getRollupDatasourceList","async","response","fetchDatasources","data","filters","status","DatasetStatus","Draft","ReadyToPublish","Live","dataset_id","err","error","en","faildToFetch","useEffect","rollupGranularityOption","_","obj","_obj$metadata","metadata","granularity","getAggregationLevel","dataset","_dataset$metadata","rollups","rollupTableData","name","datasourceId","datasource","id","aggregation","aggregationLable","replaceAll","columns","Header","accessor","Cell","value","rollupDatasourceId","row","original","_jsxs","Box","sx","marginLeft","children","_jsx","IconButton","color","size","onClick","state","edit","rollupDatasourceName","aggregationLevel","EditOutlined","style","palette","primary","main","DeleteOutlined","_Fragment","Loader","BackdropLoader","Grid","container","Alert","display","alignItems","severity","clickToCreateRollup","item","xs","MainCard","content","headerSX","ScrollX","BasicReactTable","header","striped","length","granularityOptions","Stack","direction","justifyContent","mt","Button","startIcon","fontWeight","PlusOutlined","addNewRollup","AlertDialog","handleClose","action","deleteDraftRollupDatasources","success","datasourceDeleted","faildToDeleteDatasource","context","title","DatasetManagement","useSearchParams","masterDataset","get","datasetStatus","setDataset","datasetName","datasets","useSelector","fetchDatasetsThunk","Retired","datasetState","getDatasetState","message","fetchDatasetDetails","liveSections","Typography","variant","componentType","component","ReviewAllCongurations","master","draftSections","Skeleton","type","AccordionSection","sections","datasetSection","statusToSectionMapping","Publish"],"sourceRoot":""}