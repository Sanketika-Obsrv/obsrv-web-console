"use strict";(self.webpackChunksunbird_obsrv=self.webpackChunksunbird_obsrv||[]).push([[600],{64600:(e,t,r)=>{r.r(t),r.d(t,{default:()=>$});var a=r(68903),s=r(24056),n=r(81e3),i=r(57904),o=r(65043),l=r(73216),d=r(34150),c=r(53536),u=r.n(c),m=r(97508),y=r(8387),p=r(17260),g=r(85865),_=r(50657),v=r(1199),x=r(91063),q=r(60446),A=r.n(q),h=r(28818),f=r(39205),j=r(23784),T=r(6452),P=r(59507),b=r(70579);const S=()=>{const e=(0,m.wA)(),t=(0,l.g)(),{datasetId:r,datasetType:s}=t,[n,i]=(0,o.useState)({data:null,status:"loading"}),u=(0,o.useMemo)((()=>c.get(n,"data.type")===P.DE.MasterDataset),[n]),p=(0,o.useMemo)((()=>c.get(n,["data","extraction_config","is_batch_event"])),[n]),q="YYYY-MM-DDT00:00:00+05:30",S={small:{size:{xs:12,sm:4,md:4,lg:4},groups:[{title:"Dataset Status ",charts:[{title:"Status",primary:c.get(n,"data.status"),query:()=>({...c.get(h.A,"druid_health_status.query")}),chart:e=>{let{title:t,query:r,primary:a}=e;return(0,b.jsx)(_.A,{primary:a,secondary:t,iconPrimary:v.A,query:r})}},{title:"Last Synced Time",query:()=>{const e=A()().add(1,"day").format(q),t=x.v.last_synced_time({datasetId:r,intervals:`2000-01-01/${e}`,master:u});return{...c.get(h.A,"last_synced_time.query"),body:t}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}}]},{title:"Today ",charts:[{title:"Total Events Processed",query:()=>{const e=A()().format(q),t=A()().add(1,"day").format(q),a=x.v.total_events_processed({datasetId:r,intervals:`${e}/${t}`,master:u});return{...c.get(h.A,"total_events_processed.query"),body:a}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}},{title:"Min Processing Time",query:()=>{const e=A()().format(q),t=A()().add(1,"day").format(q),a=x.v.druid_min_processing_time({datasetId:r,intervals:`${e}/${t}`,master:u});return{...c.get(h.A,"minProcessingTime.query"),body:a}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}},{title:"Average Processing Time",query:()=>{const e=A()().format(q),t=A()().add(1,"day").format(q),a=x.v.druid_avg_processing_time({datasetId:r,intervals:`${e}/${t}`,master:u});return{...c.get(h.A,"avgProcessingTime.query"),body:a}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}},{title:"Max Processing Time",query:()=>{const e=A()().format(q),t=A()().add(1,"day").format(q),a=x.v.druid_max_processing_time({datasetId:r,intervals:`${e}/${t}`,master:u});return{...c.get(h.A,"maxProcessingTime.query"),body:a}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}},{title:"Total Duplicate Batches",render:p,query:()=>{const e=A()().endOf("day").unix();return{...c.get(h.A,"duplicate_batches_summary.query"),time:e,dataset:r}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}},{title:"Total Duplicate Events",query:()=>{const e=A()().endOf("day").unix();return{...c.get(h.A,"duplicate_events_summary.query"),time:e,dataset:r}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}},{title:"Total Failed Events",query:()=>{const e=A()().endOf("day").unix();return u?c.cloneDeep({...c.get(h.A,"failed_events_summary_master_datasets.query"),time:e,dataset:r}):c.cloneDeep({...c.get(h.A,"failed_events_summary.query"),time:e,dataset:r})},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}}]},{title:"Yesterday ",charts:[{title:"Total Events Processed",query:()=>{const e=A()().subtract(1,"day").format(q),t=A()().format(q),a=x.v.total_events_processed({datasetId:r,intervals:`${e}/${t}`,master:u});return{...c.get(h.A,"total_events_processed.query"),body:a}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}},{title:"Min Processing Time",query:()=>{const e=A()().subtract(1,"day").format(q),t=A()().format(q),a=x.v.druid_min_processing_time({datasetId:r,intervals:`${e}/${t}`,master:u});return{...c.get(h.A,"minProcessingTime.query"),body:a}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}},{title:"Average Processing Time",query:()=>{const e=A()().subtract(1,"day").format(q),t=A()().format(q),a=x.v.druid_avg_processing_time({datasetId:r,intervals:`${e}/${t}`,master:u});return{...c.get(h.A,"avgProcessingTime.query"),body:a}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}},{title:"Max Processing Time",query:()=>{const e=A()().subtract(1,"day").format(q),t=A()().format(q),a=x.v.druid_max_processing_time({datasetId:r,intervals:`${e}/${t}`,master:u});return{...c.get(h.A,"maxProcessingTime.query"),body:a}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}},{title:"Total Duplicate Batches",render:p,query:()=>{const e=A()().endOf("day").subtract(1,"day").unix();return{...c.get(h.A,"duplicate_batches_summary.query"),time:e,dataset:r}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}},{title:"Total Duplicate Events",query:()=>{const e=A()().format(q);return{...c.get(h.A,"duplicate_events_summary.query"),time:e,dataset:r}},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}},{title:"Total Failed Events",query:()=>{const e=A()().endOf("day").subtract(1,"day").unix();return u?c.cloneDeep({...c.get(h.A,"failed_events_summary_master_datasets.query"),time:e,dataset:r}):c.cloneDeep({...c.get(h.A,"failed_events_summary.query"),time:e,dataset:r})},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(_.A,{primary:"0",secondary:t,iconPrimary:v.A,query:r})}}]}]},medium:{size:{xs:12,sm:6,md:6,lg:6},charts:[{title:"Total Events Processed",query:()=>{const e=u?c.cloneDeep(c.get(h.A,"totalEventsProcessedTimeSeriesPerMasterDataset")):c.cloneDeep(c.get(h.A,"totalEventsProcessedTimeSeriesPerDataset"));return c.set(e,"query.body.query.filter.fields[1].value",r),e},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(j.A,{title:t,filters:c.get(T.A,"variant1"),children:(0,b.jsx)(f.A,{metadata:r,interval:1140})})}},{title:"Events Processing Time (ms)",query:()=>{const e=u?c.cloneDeep(c.get(h.A,"minProcessingTimeSeriesPerMasterDataset")):c.cloneDeep(c.get(h.A,"minProcessingTimeSeriesPerDataset"));return c.set(e,"query.body.query.filter.fields[1].value",r),e},chart:e=>{let{title:t,query:r}=e;return(0,b.jsx)(j.A,{title:t,filters:c.get(T.A,"variant1"),children:(0,b.jsx)(f.A,{metadata:r,interval:1140})})}}]}};(0,o.useEffect)((()=>{(async()=>{try{const e=await(0,d.Rx)({datasetId:`${r}?status=${P.Zs.Live}`}).then((e=>c.get(e,"data.result")));i({data:e,status:"success"})}catch(t){e((0,y.z3)({message:"Read Dataset Failed"})),i({data:null,status:"failed"})}})()}),[]);return(0,b.jsx)(b.Fragment,{children:c.flatten(c.map(S,((e,t)=>{const{size:r,charts:s=[],groups:n=[]}=e,{xs:i,sm:o,lg:l,md:d}=r,u=(0,b.jsx)(a.Ay,{container:!0,spacing:2,marginBottom:1,children:c.map(s,((e,t)=>{const{title:r,query:s,chart:n,render:c=!0,...u}=e;return c?(0,b.jsx)(a.Ay,{item:!0,xs:i,sm:o,md:d,lg:l,alignItems:"stretch",children:n({title:r,query:s(),...u})},`${Math.random()}`):null}))},Math.random()),m=c.map(n,(e=>{const{charts:t,title:r}=e;return(0,b.jsxs)(a.Ay,{container:!0,spacing:2,alignItems:"stretch",marginBottom:1,children:[(0,b.jsx)(a.Ay,{item:!0,xs:12,children:(0,b.jsx)(g.A,{variant:"h5",children:r})}),c.map(t,((e,t)=>{const{title:r,query:s,chart:n,render:c=!0,...u}=e;return c?(0,b.jsx)(a.Ay,{item:!0,xs:i,sm:o,md:d,lg:l,alignItems:"stretch",children:n({title:r,query:s(),...u})},`${Math.random()}`):null})),(0,b.jsx)(a.Ay,{item:!0,xs:12})]},Math.random())}));return c.size(n)>0?m:u})))})};var I=r(79226),D=r(40036);const $=()=>{const[e,t]=(0,o.useState)(0),[r,c]=(0,o.useState)([]),[_,v]=(0,o.useState)({data:null,status:""}),x=(0,l.g)(),q=(0,m.wA)(),{datasetId:A}=x,h=e=>u().flatten(u().map(e,((e,t)=>{const{size:r,charts:s=[],groups:n=[]}=e,{xs:i,sm:o,lg:l,md:d}=r,c=(0,b.jsx)(a.Ay,{container:!0,spacing:2,marginBottom:1,children:u().map(s,((e,t)=>{const{title:r,query:s,chart:n,render:c=!0,...u}=e;return c?(0,b.jsx)(a.Ay,{item:!0,xs:i,sm:o,md:d,lg:l,alignItems:"stretch",children:n({title:r,query:s(),...u})},`${Math.random()}`):null}))},Math.random()),m=u().map(n,(e=>{const{charts:t,title:r}=e;return(0,b.jsxs)(a.Ay,{container:!0,spacing:2,alignItems:"stretch",marginBottom:1,children:[(0,b.jsx)(a.Ay,{item:!0,xs:12,children:(0,b.jsx)(g.A,{variant:"h5",children:r})}),u().map(t,((e,t)=>{const{title:r,query:s,chart:n,render:c=!0,...u}=e;return c?(0,b.jsx)(a.Ay,{item:!0,xs:i,sm:o,md:d,lg:l,alignItems:"stretch",children:n({title:r,query:s(),...u})},`${Math.random()}`):null})),(0,b.jsx)(a.Ay,{item:!0,xs:12})]},Math.random())}));return u().size(n)>0?m:c}))),f=async()=>{try{const e=await(async()=>(0,d.Rx)({datasetId:A}).then((e=>u().get(e,"data.result"))))();v({data:e,status:"success"}),(e=>{const t=Array.isArray(e)?e:[e];c((e=>[...e,...t]))})([{id:"dataset",label:"Dataset",icon:p.A,component:(0,b.jsx)(S,{})}])}catch{q((0,y.z3)({message:"Read Dataset Failed"})),v({data:null,status:"failed"})}};(0,o.useEffect)((()=>{f()}),[]);const j=(e,r)=>{t(r)},T=(e,t)=>{const{id:r,icon:a,label:n}=e;return(0,b.jsx)(s.A,{label:n,id:r,iconPosition:"start","aria-controls":`metrics-tabpanel-${t}`},t)},P=(t,r)=>{const{component:a}=t,s=(0,o.cloneElement)(a,{datasetId:A,dataset:_,renderSections:h});return(0,b.jsx)("div",{role:"tabpanel",hidden:e!==r,id:`metrics-tabpanel-${r}`,"aria-labelledby":`metrics-tab-${r}`,children:e===r&&(0,b.jsx)(n.A,{sx:{pt:3},children:s})},r)};return(0,b.jsx)(b.Fragment,{children:u().isEmpty(u().get(_,"status"))?(0,b.jsx)(I.A,{content:!1,children:(0,b.jsx)(D.A,{type:"table"})}):(0,b.jsx)(I.A,{title:`Dataset Metrics (${u().capitalize(u().get(_,["data","name"]))||""})`,children:(()=>{const t=u().uniqBy(r,"id");return(0,b.jsxs)(n.A,{sx:{width:"100%"},children:[(0,b.jsx)(n.A,{sx:{borderBottom:0},children:(0,b.jsx)(i.A,{variant:"standard",value:e,onChange:j,"aria-label":"metrics tabs",sx:{background:"#FFFFFF"},children:t.map(T)})}),t.map(P)]})})()})})}},91063:(e,t,r)=>{r.d(t,{v:()=>a});const a={druid_avg_processing_time:e=>{let{datasetId:t,intervals:r,master:a=!1}=e;const s="system-events";return{context:{dataSource:s},query:{queryType:"groupBy",dataSource:s,intervals:r,granularity:{type:"all",timeZone:"Asia/Kolkata"},filter:{type:"and",fields:[{type:"selector",dimension:"ctx_module",value:"processing"},{type:"selector",dimension:"ctx_dataset",value:t},{type:"selector",dimension:"ctx_pdata_pid",value:"router"},{type:"selector",dimension:"error_code",value:null}]},aggregations:[{type:"longSum",name:"processing_time",fieldName:"total_processing_time"},{type:"longSum",name:"count",fieldName:"count"}],postAggregations:[{type:"expression",name:"average_processing_time",expression:"case_searched((count > 0),(processing_time/count),0"}]}}},druid_max_processing_time:e=>{let{datasetId:t,intervals:r,master:a=!1}=e;const s="system-events";return{context:{dataSource:s},query:{queryType:"topN",dataSource:s,virtualColumns:[{type:"expression",name:"v0",expression:"case_searched((count > 0),(total_processing_time/count),0",outputType:"DOUBLE"}],dimension:{type:"default",dimension:"dataset",outputName:"dataset",outputType:"STRING"},threshold:100,metric:{type:"numeric",metric:"max_processing_time"},filter:{type:"and",fields:[{type:"selector",dimension:"ctx_module",value:"processing"},{type:"selector",dimension:"ctx_dataset",value:t},{type:"selector",dimension:"ctx_pdata_pid",value:"router"},{type:"selector",dimension:"error_code",value:null}]},intervals:r,granularity:{type:"all",timeZone:"Asia/Kolkata"},aggregations:[{type:"doubleMax",name:"max_processing_time",fieldName:"v0"}]}}},druid_min_processing_time:e=>{let{datasetId:t,intervals:r,master:a=!1}=e;const s="system-events";return{context:{dataSource:s},query:{queryType:"topN",dataSource:s,virtualColumns:[{type:"expression",name:"v0",expression:"case_searched((count > 0),(total_processing_time/count),0",outputType:"DOUBLE"}],dimension:{type:"default",dimension:"dataset",outputName:"dataset",outputType:"STRING"},threshold:100,metric:{type:"numeric",metric:"min_processing_time"},filter:{type:"and",fields:[{type:"selector",dimension:"ctx_module",value:"processing"},{type:"selector",dimension:"ctx_dataset",value:t},{type:"selector",dimension:"ctx_pdata_pid",value:"router"},{type:"selector",dimension:"error_code",value:null}]},intervals:r,granularity:{type:"all",timeZone:"Asia/Kolkata"},aggregations:[{type:"doubleMin",name:"min_processing_time",fieldName:"v0"}]}}},last_synced_time:e=>{let{datasetId:t,intervals:r,master:a=!1}=e;const s="system-events";return{context:{dataSource:s},query:{queryType:"groupBy",dataSource:s,intervals:r,granularity:{type:"all",timeZone:"Asia/Kolkata"},filter:{type:"and",fields:[{type:"selector",dimension:"ctx_module",value:"processing"},{type:"selector",dimension:"ctx_dataset",value:t},{type:"selector",dimension:"ctx_pdata_pid",value:"router"}]},aggregations:[{type:"longMax",name:"last_synced_time",fieldName:"__time"}]}}},total_events_processed:e=>{let{datasetId:t,intervals:r,master:a=!1}=e;const s="system-events";return{context:{dataSource:s},query:{queryType:"timeseries",dataSource:s,intervals:r,granularity:{type:"all",timeZone:"Asia/Kolkata"},filter:{type:"and",fields:[{type:"selector",dimension:"ctx_module",value:"processing"},{type:"selector",dimension:"ctx_dataset",value:t},{type:"selector",dimension:"ctx_pdata_pid",value:"router"},{type:"selector",dimension:"error_code",value:null}]},aggregations:[{type:"longSum",name:"count",fieldName:"count"}]}}},totalEventsProcessedTimeSeries:e=>{let{datasetId:t,intervals:r,master:a=!1}=e;const s="system-events";return{context:{dataSource:s},query:{queryType:"timeseries",dataSource:s,intervals:r,granularity:{type:"period",period:"PT5M",timeZone:"Asia/Kolkata"},filter:{type:"and",fields:[{type:"selector",dimension:"ctx_module",value:"processing"},{type:"selector",dimension:"ctx_dataset",value:t},{type:"selector",dimension:"ctx_pdata_pid",value:"router"},{type:"selector",dimension:"error_code",value:null}]},aggregations:[{type:"count",name:"count",fieldName:"count"}]}}},failedEventsCount:e=>{let{datasetId:t,intervals:r,master:a=!1}=e;const s="system-events";return{context:{dataSource:s},query:{queryType:"timeseries",dataSource:s,intervals:r,granularity:{type:"all",timeZone:"Asia/Kolkata"},filter:{type:"and",fields:[{type:"selector",dimension:"ctx_module",value:"processing"},{type:"selector",dimension:"ctx_dataset",value:t},{type:"selector",dimension:"ctx_pdata_pid",value:"router"},{type:"not",field:{type:"selector",dimension:"error_code",value:null}}]},aggregations:[{type:"longSum",name:"count",fieldName:"error_count"}]}}}}}}]);
//# sourceMappingURL=600.13f9ed63.chunk.js.map